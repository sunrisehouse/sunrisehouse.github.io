{"componentChunkName":"component---src-page-template-post-tsx","path":"/posts/14/","result":{"pageContext":{"post":{"id":14,"title":"Operating System 2 - IO management, Virtualization","dateString":"2021-12-12","description":"프로세스는 OS 의 system call 을 호출해서 I/O 를 요청한다. 그 프로세스는 그 응답을 기다리며 sleep 상태로 들어간다. IO 가 끝나면 kernel space 의 IO buffer pool 에 저장한다. interrupt 가 발생하고 프로세스를 깨우고 kernel space 의 buffer pool 에서 user space 로 가져온다.","mainImageUrl":"/images/12-0.jpeg","postThemes":[{"name":"post","id":1}],"html":"<h2 id=\"io-manaement\" style=\"position:relative;\"><a href=\"#io-manaement\" aria-label=\"io manaement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IO manaement</h2>\n<div style=\"text-align:center\">\r\n  <img src=\"/images/14-1.png\" style=\"width:90%; max-width: 400px\" />\r\n</div>\n<div style=\"text-align:center\">\r\n  <img src=\"/images/14-2.png\" style=\"width:90%; max-width: 500px\" />\r\n</div>\n<p>프로세스는 OS 의 system call 을 호출해서 I/O 를 요청한다. 그 프로세스는 그 응답을 기다리며 sleep 상태로 들어간다. IO 가 끝나면 kernel space 의 IO buffer pool 에 저장한다. interrupt 가 발생하고 프로세스를 깨우고 kernel space 의 buffer pool 에서 user space 로 가져온다.</p>\n<h2 id=\"dual-model-operation\" style=\"position:relative;\"><a href=\"#dual-model-operation\" aria-label=\"dual model operation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dual model operation</h2>\n<p>cpu 에 현재 어떤 모드인지 저장하는 1 bit 가 있다.</p>\n<ul>\n<li>user mode: processor 에서 user application code 를 실행하는 상황</li>\n<li>kernel mode: processor 에서 kernel code 를 실행하는 상황</li>\n</ul>\n<p>trap or interrupt 가 발생하면 HW 의 mode 가 바뀐다.</p>\n<ul>\n<li>trap: Software-generated interrupt caused by exception or system call</li>\n<li>interrupt: Unexpected external event from either the H/W or the S/W</li>\n</ul>\n<h2 id=\"virtualization\" style=\"position:relative;\"><a href=\"#virtualization\" aria-label=\"virtualization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Virtualization</h2>\n<h3 id=\"hardware-virtualization\" style=\"position:relative;\"><a href=\"#hardware-virtualization\" aria-label=\"hardware virtualization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hardware virtualization</h3>\n<p>한 PC 에 여러 실행 환경 (execution environment) 을 추상화 한 것. 각각의 실행 환경이 자기의 컴퓨터를 갖고 있는 것처럼 보인다.</p>\n<p>VMM(Virtual Machine Monitor or Manager) or HyperVisor: virtualize 를 실행하기 위한 플랫폼</p>\n<h4 id=\"가상화-타입-1\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81%ED%99%94-%ED%83%80%EC%9E%85-1\" aria-label=\"가상화 타입 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상화 타입 1</h4>\n<div style=\"text-align:center\">\r\n  <img src=\"/images/14-4.png\" style=\"width:90%; max-width: 300px\" />\r\n</div>\n<ul>\n<li>Para-virtualization(반가상화): guest OS 를 수정</li>\n<li>Full-virtualization(전가상화): guest OS 수정 X. supervisor 가 guest OS 의 명령어를 하드웨어한테 전달</li>\n<li>Hybrid-virtualization: guest OS 몇몇 부분 수정</li>\n</ul>\n<h4 id=\"가상화-타입-2\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EC%83%81%ED%99%94-%ED%83%80%EC%9E%85-2\" aria-label=\"가상화 타입 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가상화 타입 2</h4>\n<div style=\"text-align:center\">\r\n  <img src=\"/images/14-3.png\" style=\"width:90%; max-width: 600px\" />\r\n</div>\n<ul>\n<li>Type 1: VMM 이 직접 하드웨어 위에서 돌아간다.</li>\n<li>Type 2: VMM 이 host OS 위에서 돌아간다.</li>\n<li>Type 3: hybrid</li>\n</ul>\n<h3 id=\"os-virtualization\" style=\"position:relative;\"><a href=\"#os-virtualization\" aria-label=\"os virtualization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OS virtualization</h3>\n<p>OS virtualization is a server virtualization method where the kernel allows formultiple isolated user-space instances\r\nSuch instances, sometimes calledcontainers, virtual private servers (VPS), or jails,may look and feel like a real server from the point of view of its owners and users</p>\n<p>OS virtualization usually imposes little to no overhead, because programs in virtual partitionsuse the OS’s normal system call interfaceand do not need to be subjected to emulation orbe run in an intermediate virtual machine</p>"}}},"staticQueryHashes":[],"slicesMap":{}}